name: Deploy UATS microservices to EKS cluster
on:
  push:
    branches:
      - main
      # Add more branches
jobs:
  prepare:
    name: Prepare Workspace
    runs-on: ubuntu-20.04
    timeout-minutes: 5
    steps:
      - name: Get Branch Details
        uses: rlespinasse/github-slug-action@v3.x
      - name: Set environment details
        id: prepare-env
        run: |
          echo "::set-output name=environment_name::${GITHUB_REF_SLUG}";
          echo "::set-output name=eks_host_key::EKS_HOST_${GITHUB_REF_SLUG}";
          echo "::set-output name=eks_token_key::EKS_TOKEN_${GITHUB_REF_SLUG}";
          echo "::set-output name=eks_certificate_key::EKS_CERT_${GITHUB_REF_SLUG}";
    outputs:
      environment_name: ${{ steps.prepare-env.outputs.environment_name }}
      eks_host_key: ${{ steps.prepare-env.outputs.eks_host_key }}
      eks_token_key: ${{ steps.prepare-env.outputs.eks_token_key }}
      eks_certificate_key: ${{ steps.prepare-env.outputs.eks_certificate_key }}
  deploy:
    name: Deploy microservices to EKS cluster
    needs:
      - prepare
    runs-on: ubuntu-20.04
    timeout-minutes: 10
    env:
      ENV_NAME: ${{ needs.prepare.outputs.environment_name }}
      EKS_HOST_KEY: ${{ needs.prepare.outputs.eks_host_key }}
      EKS_TOKEN_KEY: ${{ needs.prepare.outputs.eks_token_key }}
      EKS_CERTIFICATE_KEY: ${{ needs.prepare.outputs.eks_certificate_key }}
      TF_BACKEND_BUCKET: ${{ secrets.TF_BACKEND_BUCKET }}
      TF_BACKEND_REGION: ${{ secrets.TF_BACKEND_REGION }}
      TF_BACKEND_KEY: terraform/$ENV_NAME-kubernetes-cluster.tfstate
    steps:
      - name: Clone Repository
        uses: actions/checkout@v2
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.TF_AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.TF_AWS_SECRET_ACCESS_KEY }}
          aws-region: $TF_BACKEND_REGION
      - name: Run Terraform configurations
        env:
          EKS_HOST: ${{ secrets[env.EKS_HOST_KEY] }}
          EKS_TOKEN: ${{ secrets[env.EKS_TOKEN_KEY] }}
          EKS_CERTIFICATE: ${{ secrets[env.EKS_CERTIFICATE_KEY] }}
        run: |
          cd ./terraform
          terraform init \
            -backend-config="bucket=$TF_BACKEND_BUCKET" \
            -backend-config="region=$TF_BACKEND_REGION" \
            -backend-config="key=$TF_BACKEND_KEY" \
            --reconfigure
          terraform apply \
            -var "eks_host=$EKS_HOST" \
            -var "eks_token=$EKS_TOKEN" \
            -var "eks_certificate=$EKS_CERTIFICATE" \
            -var "environment=$ENV_NAME" \
            --auto-approve

